# Point to the correct brew binary depending on which
# architecture we're using.
if [ "$(arch)" = "arm64" ]; then
  #export RBENV_ROOT=/opt/homebrew/opt/rbenv
  eval $(/opt/homebrew/bin/brew shellenv);
else # i386
  eval $(/usr/local/bin/brew shellenv);
fi
alias ibrew='arch -x86_64 /usr/local/bin/brew'

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/projects/personal/dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/projects

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Z navigation script link
. $ZSH/system/z.sh

# /usr/local/opt/qt/bin:/Users/osw/perl5/bin:./bin:/usr/local/bin:/usr/local/sbin:/Users/osw/projects/personal/dotfiles/bin:/Users/osw/.rbenv/shims:/Users/osw/projects/go/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Postgres.app/Contents/Versions/latest/bin:/usr/local/smlnj/bin

PATH="/Users/osw/.rbenv/shims:/Users/osw/.rbenv/bin:/Users/osw/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/osw/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/osw/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/osw/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/osw/perl5"; export PERL_MM_OPT;

export PATH="$PATH:/usr/local/smlnj/bin"

# Forces Postgresql server to use localhost by default:
# https://github.com/PostgresApp/PostgresApp/issues/48#issuecomment-287940073
export PGHOST=localhost

compdef g=git
export PATH="/usr/local/opt/qt/bin:$PATH"

#GEM_PATH=$GEM_PATH:~/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems`

# Potgres alias (homebrew)
alias pg-start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pg-stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias vim="nvim"

export PATH=/usr/local/opt/icu4c/bin:/usr/local/opt/icu4c/sbin:$PATH
export LDFLAGS="-L/usr/local/opt/icu4c/lib"
# export CPPFLAGS="-I/usr/local/opt/icu4c/include"

# Bug https://github.com/rtomayko/shotgun/issues/69
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# Homebrew
export PATH=/opt/homebrew/bin:$PATH
export PATH="/opt/homebrew/sbin:$PATH"

# rbenv
export PATH=$RBENV_ROOT/bin:$PATH
eval "$(rbenv init -)"

# openssl
export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"
#export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib"
#export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"
#export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include"

# Non M1 rbenv install
export LDFLAGS="-L/usr/local/opt/readline/lib"
export CPPFLAGS="-I/usr/local/opt/readline/include"
export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig"
export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig:$PKG_CONFIG_PATH"

export PATH="/usr/local/opt/libpq/bin:$PATH"

nvm use 12.21.0
export PATH="/usr/local/opt/m4/bin:$PATH"
export PATH="/opt/homebrew/opt/postgresql@11/bin:$PATH"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@11/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@11/lib/pkgconfig"

. $HOME/.asdf/asdf.sh
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export PATH="$HOME/.asdf/shims:$PATH"


export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
